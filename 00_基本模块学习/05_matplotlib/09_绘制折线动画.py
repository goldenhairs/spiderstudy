import matplotlib.pyplot as plt
from matplotlib.animation import FuncAnimation

china = [264, 462, 688, 777, 1773, 1464, 1737, 1984, 2101, 2590, 2827, 3233, 3892, 3697, 3151, 3387, 2653, 2923, 2467,
         2015, 16265, 3011, 2644, 2008, 2051, 1893, 1751, 822, 892, 399, 649, 221, 517, 411, 440, 329, 430, 579, 206,
         128, 120, 143, 145, 103, 46, 45, 20, 31, 25, 23, 18, 27, 29, 39, 35, 84, 65, 116, 82, 102, 147, 100, 113, 118,
         135, 128, 106, 98, 86, 93, 78, 73, 55, 75, 66, 86, 92, 56, 64, 113, 115, 99, 49, 52, 352, 31, 21, 36, 13, 37,
         15, 9, 13, 14, 3, 6, 22, 0, 16, 3, 5, 7, 4, 0, 4, 7, 1, 15, 19, 1, 7, 6, 5, 9, 6, 10, 6, 5, 2, 13, 2, 3, 11, 7,
         1, 3, 0, 14, 9, 18, 9, 7, -1, 11, 3, 8, 9, 4, 3, 11, 7, 12, 58, 49, 45, 44, 36, 37, 30, 27, 21, 52, 28, 21, 29,
         24, 18, 14, 23, 5, 31, 15, 6, 22, 11, 28, 21, 33, 46, 42, 35, 46, 55, 54, 20, 78, 82, 80, 131, 84, 62, 147,
         139, 160, 179, 189, 217, 212, 223, 276, 166, 179, 158, 114, 109, 122, 133, 120, 92, 121, 115, 59, 82, 99, 70,
         66, 98, 67, 54, 33, 40, 50, 38, 41, 23, 34, 32, 30, 22, 28, 32, 19, 20, 20, 15, 41, 19, 34, 22, 9, 13, 28, 20,
         23, 29, 23, 16, 19, 44, 17, 26, 36, 14, 18, 10, 15, 18, 15, 27, 25, 23, 20, 21, 19, 20, 25, 24, 18, 13, 51, 26,
         27, 28, 26, 29, 11, 37, 24, 30, 17, 39, 19, 23, 33, 32, 22, 26, 24, 10, 86, 31, 41, 28, 34, 60, 30, 32, 44, 43,
         31, 47, 29, 28, 37, 36, 32, 24, 24, 24, 14, 23, 31, 44, 60, 85, 96, 85, 111, 88, 112, 104, 136, 112, 91, 129,
         108, 133, 122, 133, 90, 117, 118, 131, 100, 101, 114, 103, 112, 96, 116, 89, 136, 100, 100, 82, 76, 85, 81, 84,
         93, 96, 79, 81, 89, 45, 87, 78, 89, 66, 90, 89, 81, 131, 134, 102, 179, 184, 173, 169, 166, 169, 232, 165, 223,
         175, 178, 164, 205, 155, 140, 117, 93, 106, 130, 97, 65, 53, 51, 98, 31, 44]
time = [20200123, 20200124, 20200125, 20200126, 20200127, 20200128, 20200129, 20200130, 20200131, 20200201, 20200202,
        20200203, 20200204, 20200205, 20200206, 20200207, 20200208, 20200209, 20200210, 20200211, 20200212, 20200213,
        20200214, 20200215, 20200216, 20200217, 20200218, 20200219, 20200220, 20200221, 20200222, 20200223, 20200224,
        20200225, 20200226, 20200227, 20200228, 20200229, 20200301, 20200302, 20200303, 20200304, 20200305, 20200306,
        20200307, 20200308, 20200309, 20200310, 20200311, 20200312, 20200313, 20200314, 20200315, 20200316, 20200317,
        20200318, 20200319, 20200320, 20200321, 20200322, 20200323, 20200324, 20200325, 20200326, 20200327, 20200328,
        20200329, 20200330, 20200331, 20200401, 20200402, 20200403, 20200404, 20200405, 20200406, 20200407, 20200408,
        20200409, 20200410, 20200411, 20200412, 20200413, 20200414, 20200415, 20200416, 20200417, 20200418, 20200419,
        20200420, 20200421, 20200422, 20200423, 20200424, 20200425, 20200426, 20200427, 20200428, 20200429, 20200430,
        20200501, 20200502, 20200503, 20200504, 20200505, 20200506, 20200507, 20200508, 20200509, 20200510, 20200511,
        20200512, 20200513, 20200514, 20200515, 20200516, 20200517, 20200518, 20200519, 20200520, 20200521, 20200522,
        20200523, 20200524, 20200525, 20200526, 20200527, 20200528, 20200529, 20200530, 20200531, 20200601, 20200602,
        20200603, 20200604, 20200605, 20200606, 20200607, 20200608, 20200609, 20200610, 20200611, 20200612, 20200613,
        20200614, 20200615, 20200616, 20200617, 20200618, 20200619, 20200620, 20200621, 20200622, 20200623, 20200624,
        20200625, 20200626, 20200627, 20200628, 20200629, 20200630, 20200701, 20200702, 20200703, 20200704, 20200705,
        20200706, 20200707, 20200708, 20200709, 20200710, 20200711, 20200712, 20200713, 20200714, 20200715, 20200716,
        20200717, 20200718, 20200719, 20200720, 20200721, 20200722, 20200723, 20200724, 20200725, 20200726, 20200727,
        20200728, 20200729, 20200730, 20200731, 20200801, 20200802, 20200803, 20200804, 20200805, 20200806, 20200807,
        20200808, 20200809, 20200810, 20200811, 20200812, 20200813, 20200814, 20200815, 20200816, 20200817, 20200818,
        20200819, 20200820, 20200821, 20200822, 20200823, 20200824, 20200825, 20200826, 20200827, 20200828, 20200829,
        20200830, 20200831, 20200901, 20200902, 20200903, 20200904, 20200905, 20200906, 20200907, 20200908, 20200909,
        20200910, 20200911, 20200912, 20200913, 20200914, 20200915, 20200916, 20200917, 20200918, 20200919, 20200920,
        20200921, 20200922, 20200923, 20200924, 20200925, 20200926, 20200927, 20200928, 20200929, 20200930, 20201001,
        20201002, 20201003, 20201004, 20201005, 20201006, 20201007, 20201008, 20201009, 20201010, 20201011, 20201012,
        20201013, 20201014, 20201015, 20201016, 20201017, 20201018, 20201019, 20201020, 20201021, 20201022, 20201023,
        20201024, 20201025, 20201026, 20201027, 20201028, 20201029, 20201030, 20201031, 20201101, 20201102, 20201103,
        20201104, 20201105, 20201106, 20201107, 20201108, 20201109, 20201110, 20201111, 20201112, 20201113, 20201114,
        20201115, 20201116, 20201117, 20201118, 20201119, 20201120, 20201121, 20201122, 20201123, 20201124, 20201125,
        20201126, 20201127, 20201128, 20201129, 20201130, 20201201, 20201202, 20201203, 20201204, 20201205, 20201206,
        20201207, 20201208, 20201209, 20201210, 20201211, 20201212, 20201213, 20201214, 20201215, 20201216, 20201217,
        20201218, 20201219, 20201220, 20201221, 20201222, 20201223, 20201224, 20201225, 20201226, 20201227, 20201228,
        20201229, 20201230, 20201231, 20210101, 20210102, 20210103, 20210104, 20210105, 20210106, 20210107, 20210108,
        20210109, 20210110, 20210111, 20210112, 20210113, 20210114, 20210115, 20210116, 20210117, 20210118, 20210119,
        20210120, 20210121, 20210122, 20210123, 20210124, 20210125, 20210126, 20210127, 20210128, 20210129, 20210130,
        20210131, 20210201, 20210202, 20210203, 20210205, 20210206, 20210207, 20210208]
time_label = ['{}月{}日'.format(i % 10000 // 100, i % 100) for i in time]

fig = plt.figure(figsize=(10, 6))

# 初始化坐标轴和折线图
line, = plt.plot([], [], color='r', marker='o')

# 设置y轴坐标范围
plt.ylim(0, 4000)
# 设置x轴坐标范围，即用于展示的
x_range = 10
plt.xlim(0, x_range)
# 初始化x轴坐标
x = list(range(len(time_label)))
plt.xticks(x[0:x_range], time_label[0:x_range])
plt.xlabel('2020年')
# 定义变量用于表示每帧显示几条数据
line_range = 6


# 实现动画更新方法，用于更新折线图
def update(i):
    # 起始索引
    start = 0 if i - line_range < 0 else i - line_range
    # 结束索引
    end = i + 1
    # 更新折线图的数据
    line.set_data(x[start:end], china[start:end])
    # 更新横轴
    if i > line_range:
        # 计算横轴结束索引
        x_end = i + (x_range - line_range) if i + (x_range - line_range) < len(x) else len(x)
        # 更新横轴范围
        plt.xlim(start, x_end)
        plt.xticks(x[start:end], time_label[start:x_end])
    if i > 50:
        plt.ylim(0, 500)
    if i > 344:
        plt.xlabel('2021年')
    return line

plt.title('中国新冠疫情新增病例动态图展示')

# 创建动画
animation = FuncAnimation(fig, update, frames=x, repeat=False, interval=100)

plt.show()
